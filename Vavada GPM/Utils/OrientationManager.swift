import UIKit

/// –ú–µ–Ω–µ–¥–∂–µ—Ä –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏–µ–π —ç–∫—Ä–∞–Ω–∞
class OrientationManager {
    static let shared = OrientationManager()
    
    private init() {}
    
    /// –¢–µ–∫—É—â–∞—è –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º–∞—è –æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏—è
    private var currentOrientation: UIInterfaceOrientationMask = .portrait
    
    /// –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ –æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏–∏
    func setSupportedOrientations(_ orientations: UIInterfaceOrientationMask) {
        print("üîÑ [OrientationManager] Setting orientations: \(orientations)")
        currentOrientation = orientations
    }
    
    /// –ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â–∏–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ –æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏–∏
    func supportedOrientations() -> UIInterfaceOrientationMask {
        return currentOrientation
    }
    
    /// –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –≤—Å–µ –æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏–∏ (–¥–ª—è WebView)
    func unlockAllOrientations() {
        // –î–ª—è iPhone –∏—Å–ø–æ–ª—å–∑—É–µ–º –≤—Å–µ –æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏–∏ –∫—Ä–æ–º–µ –ø–µ—Ä–µ–≤–µ—Ä–Ω—É—Ç–æ–π
        let orientations: UIInterfaceOrientationMask = UIDevice.current.userInterfaceIdiom == .pad ? .all : .allButUpsideDown
        print("üîÑ [OrientationManager] Unlocking orientations: \(orientations)")
        setSupportedOrientations(orientations)
    }
    
    /// –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –ø–æ—Ä—Ç—Ä–µ—Ç–Ω—É—é –æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏—é
    func lockToPortrait() {
        print("üîÑ [OrientationManager] Locking to portrait")
        setSupportedOrientations(.portrait)
    }
} 