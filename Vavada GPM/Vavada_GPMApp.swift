import SwiftUI

@main
struct Vavada_GPMApp: App {
    @UIApplicationDelegateAdaptor(AppDelegate.self) var appDelegate
    @StateObject private var appStateManager = AppStateManager.shared
    
    var body: some Scene {
        WindowGroup {
            ZStack {
                if appStateManager.isLoading {
                    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —ç–∫—Ä–∞–Ω –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–∫–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª–æ–∞–∫–∏–Ω–≥
                    LoadingScreen()
                        .onAppear { print("üîÑ [App] Showing LoadingScreen") }
                } else if appStateManager.shouldShowWebView, let urlString = appStateManager.webViewURL {
                    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º WebView
                    CasinoWebView(urlString: urlString)
                        .onAppear { print("üé∞ [App] Showing CasinoWebView with URL: \(urlString)") }
                } else {
                    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –±–µ–ª—É—é —á–∞—Å—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
                    ContentView()
                        .onAppear { print("‚ö™ [App] Showing ContentView (white part)") }
                }
            }
            .environmentObject(appStateManager)
            .preferredColorScheme(.light)
            .onAppear {
                print("üöÄ [App] App launched")
                print("üì± [App] Initial state - isLoading: \(appStateManager.isLoading), shouldShowWebView: \(appStateManager.shouldShowWebView)")
            }
        }
    }
}
